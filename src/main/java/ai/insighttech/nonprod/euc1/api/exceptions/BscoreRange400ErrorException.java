/*
 * BotScoreLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package ai.insighttech.nonprod.euc1.api.exceptions;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.coreinterfaces.http.Context;

/**
 * This is a model class for BscoreRange400ErrorException type.
 */
public class BscoreRange400ErrorException extends ApiException {
    private static final long serialVersionUID = 8149037125892949622L;
    private String responseStatus;
    private String responseMessage;
    private int queryExecutionTime;

    /**
     * Initialization constructor.
     * @param   reason  The reason for throwing exception
     * @param   context The context of the API exception
     */
    public BscoreRange400ErrorException(String reason, Context context) {
        super(reason, context);
    }


    /**
     * Getter for ResponseStatus.
     * Status of the response
     * @return Returns the String
     */
    @JsonGetter("responseStatus")
    public String getResponseStatus() {
        return this.responseStatus;
    }

    /**
     * Setter for ResponseStatus.
     * Status of the response
     * @param responseStatus Value for String
     */
    @JsonSetter("responseStatus")
    private void setResponseStatus(String responseStatus) {
        this.responseStatus = responseStatus;
    }

    /**
     * Getter for ResponseMessage.
     * Message describing the response status
     * @return Returns the String
     */
    @JsonGetter("responseMessage")
    public String getResponseMessage() {
        return this.responseMessage;
    }

    /**
     * Setter for ResponseMessage.
     * Message describing the response status
     * @param responseMessage Value for String
     */
    @JsonSetter("responseMessage")
    private void setResponseMessage(String responseMessage) {
        this.responseMessage = responseMessage;
    }

    /**
     * Getter for QueryExecutionTime.
     * Query execution time in milliseconds
     * @return Returns the int
     */
    @JsonGetter("queryExecutionTime")
    public int getQueryExecutionTime() {
        return this.queryExecutionTime;
    }

    /**
     * Setter for QueryExecutionTime.
     * Query execution time in milliseconds
     * @param queryExecutionTime Value for int
     */
    @JsonSetter("queryExecutionTime")
    private void setQueryExecutionTime(int queryExecutionTime) {
        this.queryExecutionTime = queryExecutionTime;
    }
}
